@model Service.DTOs.ToolbarPermissionDto

@{
    ViewBag.Title = "GongSiXinXi";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var X = Html.X();
}
@{
    var GongSiXinXiModel = X.Model()
        .ID("GongSiXinXiModel")
        .Fields(f => {
            f.Add(X.ModelField().Name("Id"));
            f.Add(X.ModelField().Name("MingCheng"));
            f.Add(X.ModelField().Name("YingWenMing"));
            f.Add(X.ModelField().Name("ZhiWu"));
            f.Add(X.ModelField().Name("DiZhi"));
            f.Add(X.ModelField().Name("LianXiRen"));
            f.Add(X.ModelField().Name("DianHua"));
            f.Add(X.ModelField().Name("DianHua2"));
            f.Add(X.ModelField().Name("GongSiJianJie"));
            f.Add(X.ModelField().Name("KeFuDianHua"));
            f.Add(X.ModelField().Name("EMail"));
            f.Add(X.ModelField().Name("SiteUrl"));
            f.Add(X.ModelField().Name("AreaPath"));
            f.Add(X.ModelField().Name("CreatedBy"));
            f.Add(X.ModelField().Name("CreatedDate").Type(ModelFieldType.Date).DateReadFormat("yyyy/MM/dd HH:mm:ss"));
            f.Add(X.ModelField().Name("LastModifiedBy"));
            f.Add(X.ModelField().Name("LastModifiedDate").Type(ModelFieldType.Date).DateReadFormat("yyyy/MM/dd HH:mm:ss"));

        });

    var storeGongSiXinXi = X.Store()
        .ID("storeGongSiXinXi")
        .AutoLoad(false)
        .RemoteFilter(true)
        .RemotePaging(true)
        .RemoteSort(true)
        .Model(GongSiXinXiModel)
        .Proxy(p => p
            .Add(X.AjaxProxy()
                .Url(Url.Action("GetAll", "GongSiXinXi"))
                .Reader(r => r.Add(X.JsonReader().Root("data")))
            )
        );

    var grid = X.GridPanel()
        .ID("gridGongSiXinXi")
        .Region(Region.Center)
        .Store(storeGongSiXinXi)
        .SelectionModel(
            X.CheckboxSelectionModel()
                .Mode(SelectionMode.Single)
        )
        .ColumnModel(
            X.RowNumbererColumn().Width(30).Sortable(false),
            X.Column().Text("Id").DataIndex("Id").Hidden(true),
            X.Column().Text("中文名称").DataIndex("MingCheng").Width(80).Hidden(false),
            X.Column().Text("英文名称").DataIndex("YingWenMing").Width(80).Hidden(false),
            X.CheckColumn().Text("智屋上线").DataIndex("ZhiWu").Width(80).Hidden(false),
            X.Column().Text("地址").DataIndex("DiZhi").Width(80).Hidden(false),
            X.Column().Text("联系人").DataIndex("LianXiRen").Width(80).Hidden(true),
            X.Column().Text("客服电话1").DataIndex("DianHua").Width(80).Hidden(false),
            X.Column().Text("客服电话2").DataIndex("DianHua2").Width(80).Hidden(false),
            X.Column().Text("GongSiJianJie").DataIndex("GongSiJianJie").Width(80).Hidden(true),
            X.Column().Text("KeFuDianHua").DataIndex("KeFuDianHua").Width(80).Hidden(true),
            X.Column().Text("EMail").DataIndex("EMail").Width(80).Hidden(false),
            X.Column().Text("公司网站").DataIndex("SiteUrl").Width(80).Hidden(false),
            X.Column().Text("AreaPath").DataIndex("AreaPath").Width(80).Hidden(true),
            X.Column().Text("CreatedBy").DataIndex("CreatedBy").Width(80).Hidden(true),
            X.DateColumn().Text("CreatedDate").DataIndex("CreatedDate").Format("yyyy/MM/dd").Width(80).Hidden(true),
            X.Column().Text("LastModifiedBy").DataIndex("LastModifiedBy").Width(80).Hidden(true),
            X.DateColumn().Text("LastModifiedDate").DataIndex("LastModifiedDate").Format("yyyy/MM/dd").Width(80).Hidden(true)
         )

        .Listeners(l => l.BeforeRender.Handler = " App.storeGongSiXinXi.load();  ")
        .Features(
            Html.X().GridFilters()
                .MenuFilterText("过滤")
                .Local(false)
                .Filters(
                    X.NumericFilter().DataIndex("Id"),
                    X.StringFilter().DataIndex("MingCheng"),
                    X.StringFilter().DataIndex("YingWenMing"),
                    X.BooleanFilter().DataIndex("ZhiWu"),
                    X.StringFilter().DataIndex("DiZhi"),
                    X.StringFilter().DataIndex("LianXiRen"),
                    X.StringFilter().DataIndex("DianHua"),
                    X.StringFilter().DataIndex("DianHua2"),
                    X.StringFilter().DataIndex("GongSiJianJie"),
                    X.StringFilter().DataIndex("KeFuDianHua"),
                    X.StringFilter().DataIndex("EMail"),
                    X.StringFilter().DataIndex("SiteUrl"),
                    X.StringFilter().DataIndex("AreaPath"),
                    X.StringFilter().DataIndex("CreatedBy"),
                    X.DateFilter().DataIndex("CreatedDate"),
                    X.StringFilter().DataIndex("LastModifiedBy"),
                    X.DateFilter().DataIndex("LastModifiedDate")
                )
        )
        .TopBar(t => t
            .Add(X
                .Toolbar()
                .ID("toolbarGongSiXinXi")
                .Items(ti =>
                {
                    ti.Add(X.Button()
                        .ID("btnAdd")
                        .Disabled(@Model.DisableAdd)
                        .Text("新增")
                        .Icon(Icon.ApplicationAdd)
                        .DirectEvents(
                            de =>
                            {
                                de.Click.Url = Url.Action("Create", "GongSiXinXi");
                                de.Click.EventMask.ShowMask = true;
                            }));
                    ti.Add(X.Button()
                        .ID("btnEdit")
                        .Disabled(@Model.DisableEdit)
                        .Text("修改")
                        .Icon(Icon.ApplicationFormEdit)
                        .DirectEvents(
                            de =>
                            {
                                de.Click.Before = "return beforeEditCheck(App.gridGongSiXinXi);";
                                de.Click.Url = Url.Action("Edit", "GongSiXinXi");
                                de.Click.EventMask.ShowMask = true;
                                de.Click.ExtraParams.Add(new Parameter()
                                {
                                    Name = "id",
                                    Value = "getSelectedRowId(App.gridGongSiXinXi)",
                                    Mode = ParameterMode.Raw
                                });
                            }));
                    ti.Add(X.Button()
                        .ID("btnDelete")
                        .Disabled(@Model.DisableDelete)
                        .Text("删除")
                        .Icon(Icon.ApplicationDelete)
                        .Listeners(l => l.Click.Handler = "deleteRow(App.gridGongSiXinXi,'GongSiXinXi','Delete')")
                        );
                    ti.Add(X.Button()
                        .ID("btnRefresh")
                        .Disabled(@Model.DisableRefresh)
                        .Text("刷新")
                        .Icon(Icon.TableRefresh)
                        .DirectEvents(
                            de =>
                            {
                                de.Click.Url = Url.Action("Refresh", "GongSiXinXi");
                                de.Click.EventMask.ShowMask = true;
                            }));
                    ti.Add(X.ToolbarSeparator());
                    ti.Add(X.Button()
                        .ID("btnUpload")
                        .Disabled(@Model.DisableUpload)
                        .Text("上传")
                        .Icon(Icon.DiskUpload)
                        .DirectEvents(
                            de =>
                            {
                                de.Click.Url = Url.Action("ExcelUpload", "FileUpload");
                                de.Click.EventMask.ShowMask = true;
                                de.Click.ExtraParams.Add(X.Parameter().Name("importDataType").Value("GongSiXinXi").Mode(ParameterMode.Value));
                            }));
                    ti.Add(X.Button()
                        .ID("btnExport")
                        .Disabled(@Model.DisableExport)
                        .Text("导出")
                        .Icon(Icon.PageExcel)
                        .DirectEvents(
                            de =>
                            {
                                de.Click.Url = Url.Action("ExportToExcel", "GongSiXinXi");
                                de.Click.IsUpload = true;
                                de.Click.ExtraParams.Add(X.Parameter().Name("filters").Value("getFilters(#{gridGongSiXinXi})").Mode(ParameterMode.Raw));
                                de.Click.ExtraParams.Add(X.Parameter().Name("sorters").Value("getSorters(#{gridGongSiXinXi})").Mode(ParameterMode.Raw));
                                de.Click.ExtraParams.Add(X.Parameter().Name("columns").Value("getVisibleColumns(#{gridGongSiXinXi})").Mode(ParameterMode.Raw));
                            })
                            );  
                })
            ))
        .BottomBar(b => b
            .Add(X.PagingToolbar()
                .Items(Html.X().Button()
                    .Text("清除过滤条件")
                    .Handler("clearFilters(App.gridGongSiXinXi); "))));
}
@(
 X.Viewport()
      .ID("content")
      .Layout(LayoutType.Border)
      .Items(grid)
      )