  
@using DataAccess
@model Service.DTOs.ToolbarPermissionDto
@{
    ViewBag.Title = "操作按钮";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var X = Html.X();
}


@{


    var SA_ResourceModel = X.Model()
        .ID("SA_ResourceModel")
        .Fields(f => {
            f.Add(X.ModelField().Name("Id"));
            f.Add(X.ModelField().Name("ResName"));
            f.Add(X.ModelField().Name("ResDescription"));
            f.Add(X.ModelField().Name("Tag"));
            f.Add(X.ModelField().Name("SortIndex"));
            f.Add(X.ModelField().Name("IconUrl"));

        });

    var storeSA_Resource = X.Store()
        .ID("storeSA_Resource")
        .AutoLoad(false)
        .RemoteFilter(true)
        .RemotePaging(true)
        .RemoteSort(true)
        .Model(SA_ResourceModel)
        .Proxy(p => p
            .Add(X.AjaxProxy()
                .Url(Url.Action("GetAll", "SAResourceType"))
                .Reader(r => r.Add(X.JsonReader().Root("data")))
            )
        );

    var grid = X.GridPanel()
        .ID("gridSA_Resource")
        //.Title("SA_Resource")
        .Region(Region.Center)
        .Store(storeSA_Resource)
        .SelectionModel(
            X.CheckboxSelectionModel()
                .Mode(SelectionMode.Single)
        )
        .ColumnModel(
            X.RowNumbererColumn().Width(30).Sortable(false),
            X.Column().Text("Id").DataIndex("Id").Hidden(true),
            X.Column().Text("名称").DataIndex("ResName").Width(80).Hidden(false),
            X.Column().Text("描述").DataIndex("ResDescription").Width(80).Hidden(false),
            
            //X.TemplateColumn().Text("图标").DataIndex("IconUrl").Width(60).TemplateString("<img src='{IconUrl}'/>"),
            X.Column().Text("标签").DataIndex("Tag").Width(80).Hidden(false),
            X.NumberColumn().Text("序号").DataIndex("SortIndex").Width(80).Hidden(false).Renderer(RendererFormat.Number,new[]{"0"})
         )

        .Listeners(l => l.BeforeRender.Handler = " App.storeSA_Resource.load();  ")
        .Features(
            Html.X().GridFilters()
                .MenuFilterText("过滤")
                .Local(false)
                .Filters(
                    X.NumericFilter().DataIndex("Id"),
                    X.StringFilter().DataIndex("ResName"),
                    X.StringFilter().DataIndex("ResDescription"),
                    X.StringFilter().DataIndex("Tag"),
                    X.NumericFilter().DataIndex("SortIndex")
                )
        )
        .TopBar(t => t
            .Add(X
                .Toolbar()
                .ID("toolbarSA_Resource")
                .Items(ti =>
                {
                    ti.Add(X.Button()
                        .ID("btnAdd")
                        .Disabled(@Model.DisableAdd)
                        .Text("新增")
                        .Icon(Icon.ApplicationAdd)
                        .DirectEvents(
                            de =>
                            {
                                de.Click.Url = Url.Action("Create", "SAResourceType");
                                de.Click.EventMask.ShowMask = true;
                            }));
                    ti.Add(X.Button()
                        .ID("btnEdit")
                        .Disabled(@Model.DisableEdit)
                        .Text("修改")
                        .Icon(Icon.ApplicationFormEdit)
                        .DirectEvents(
                            de =>
                            {
                                de.Click.Before = "return beforeEditCheck(App.gridSA_Resource);";
                                de.Click.Url = Url.Action("Edit", "SAResourceType");
                                de.Click.EventMask.ShowMask = true;
                                de.Click.ExtraParams.Add(new Parameter()
                                {
                                    Name = "id",
                                    Value = "getSelectedRowId(App.gridSA_Resource)",
                                    Mode = ParameterMode.Raw
                                });
                            }));
                    ti.Add(X.Button()
                        .ID("btnDelete")
                        .Disabled(@Model.DisableDelete)
                        .Text("删除")
                        .Icon(Icon.ApplicationDelete)
                        .Listeners(l => l.Click.Handler = "deleteRow(App.gridSA_Resource,'SAResourceType','Delete')")
                        );
                    ti.Add(X.Button()
                        .ID("btnRefresh")
                        .Disabled(@Model.DisableRefresh)
                        .Text("刷新")
                        .Icon(Icon.TableRefresh)
                        .DirectEvents(
                            de =>
                            {
                                de.Click.Url = Url.Action("Refresh", "SAResourceType");
                                de.Click.EventMask.ShowMask = true;
                            }));
                    //ti.Add(X.ToolbarSeparator());
                    //ti.Add(X.Button()
                    //    .ID("btnFileUpload")
                    //    .Text("上传")
                    //    .Icon(Icon.DiskUpload)
                    //    .DirectEvents(
                    //        de =>
                    //        {
                    //            de.Click.Url = Url.Action("ExcelUpload", "FileUpload");
                    //            de.Click.EventMask.ShowMask = true;
                    //            de.Click.ExtraParams.Add(X.Parameter().Name("importDataType").Value("SA_Resource").Mode(ParameterMode.Value));
                    //        }));
                    //ti.Add(X.Button()
                    //    .ID("btnExport")
                    //    .Text("导出")
                    //    .Icon(Icon.PageExcel)
                    //    .DirectEvents(
                    //        de =>
                    //        {
                    //            de.Click.Url = Url.Action("ExportToExcel", "SAResourceType");
                    //            de.Click.IsUpload = true;
                    //            de.Click.ExtraParams.Add(X.Parameter().Name("filters").Value("getFilters(#{gridSA_Resource})").Mode(ParameterMode.Raw));
                    //            de.Click.ExtraParams.Add(X.Parameter().Name("sorters").Value("getSorters(#{gridSA_Resource})").Mode(ParameterMode.Raw));
                    //            de.Click.ExtraParams.Add(X.Parameter().Name("columns").Value("getVisibleColumns(#{gridSA_Resource})").Mode(ParameterMode.Raw));
                    //        })
                    //        );  
                })
            ))
        .BottomBar(b => b
            .Add(X.PagingToolbar()
                .Items(Html.X().Button()
                    .Text("清除过滤条件")
                    .Handler("clearFilters(App.gridSA_Resource); "))));
}
@(
 X.Viewport()
      .ID("content")
      .Layout(LayoutType.Border)
      .Items(grid)
      )