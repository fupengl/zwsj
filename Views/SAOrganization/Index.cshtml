  
@using DataAccess
@model Service.DTOs.ToolbarPermissionDto
@{
    ViewBag.Title = "SA_Organization";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var X = Html.X();
}
@section header {
    <script type="text/javascript" src=@Url.Content("~/Content/treePanelHelper.js")></script>
}

<script type="text/javascript">
    var renderDataDictionary_OrgType = function(value) {
        var r = App.storeDataDictionaryLookup_OrgType_I.getById(value);
        if (Ext.isEmpty(r)) {
            return " ";
        }
        return r.data.KeyValue;
    };

    var getOrgTypeDescription = function(v, node) {
        switch (node.data['orgType']) {
        case "Root":
            return "组织架构";
        case "Company":
            return "公司";
        case "Department":
            return "部门";
        case "Position":
            return "岗位";
        case "Staff":
            return "人员";
        default:
            return " ";
        }
};
    var checkMenuStatus = function() {
        var selectedNode = getSelectedNode(App.treePanelSAOrganization);
        if (selectedNode == null) {
            App.menuCompany.disable();
            App.menuDepartment.disable();
            App.menuPosition.disable();
            App.menuStaff.disable();

            return;
        }

        var orgType = selectedNode.get('orgType');
        switch (orgType) {
        case "Root":
            {
                App.menuCompany.enable();
                App.menuDepartment.enable();
                App.menuPosition.enable();
                App.menuStaff.enable();
                break;
            }
        case "Company":
            {
                App.menuCompany.enable();
                App.menuDepartment.enable();
                App.menuPosition.enable();
                App.menuStaff.enable();
                break;
            }
        case "Department":
            {
                App.menuCompany.disable();
                App.menuDepartment.enable();
                App.menuPosition.enable();
                App.menuStaff.enable();
                break;
            }
        case "Position":
            {
                App.menuCompany.disable();
                App.menuDepartment.disable();
                App.menuPosition.disable();
                App.menuStaff.enable();
                break;
            }
        case "Staff":
            {
                App.menuCompany.disable();
                App.menuDepartment.disable();
                App.menuPosition.disable();
                App.menuStaff.disable();
                break;
            }
        default:
            break;
        }
};
</script>
@{
    
    var SA_OrganizationModel = X.Model()
        .ID("SA_OrganizationModel")
        .Fields(f => {
            f.Add(X.ModelField().Name("id").Mapping("Id"));
            f.Add(X.ModelField().Name("idRelation").Mapping("IdRelation"));
            f.Add(X.ModelField().Name("name").Mapping("Name"));
            f.Add(X.ModelField().Name("description").Mapping("Description"));
            f.Add(X.ModelField().Name("code").Mapping("Code"));
            f.Add(X.ModelField().Name("namePath").Mapping("NamePath"));
            f.Add(X.ModelField().Name("codePath").Mapping("CodePath"));
            f.Add(X.ModelField().Name("idPath").Mapping("IdPath"));
            f.Add(X.ModelField().Name("orgType").Mapping("OrgType"));
            f.Add(X.ModelField().Name("orgTypeDescription").Convert(c => c.Fn = "getOrgTypeDescription"));
            f.Add(X.ModelField().Name("sequence").Mapping("Sequence"));
            f.Add(X.ModelField().Name("validState").Mapping("ValidState"));
            f.Add(X.ModelField().Name("parentId").Mapping("ParentId"));
            f.Add(X.ModelField().Name("level").Mapping("Level"));
            f.Add(X.ModelField().Name("phone").Mapping("Phone"));
            f.Add(X.ModelField().Name("fax").Mapping("Fax"));
            f.Add(X.ModelField().Name("address").Mapping("Address"));
            f.Add(X.ModelField().Name("zip").Mapping("Zip"));
            f.Add(X.ModelField().Name("userId").Mapping("UserId"));
            f.Add(X.ModelField().Name("nodeType").Mapping("NodeType"));
            f.Add(X.ModelField().Name("areaPath").Mapping("AreaPath"));
            f.Add(X.ModelField().Name("parentNamePath").Mapping("ParentNamePath"));
            f.Add(X.ModelField().Name("parentCodePath").Mapping("ParentCodePath"));
            f.Add(X.ModelField().Name("parentIdPath").Mapping("ParentIdPath"));
            f.Add(X.ModelField().Name("areaCode").Mapping("AreaCode"));
            

        });

    var storeSAOrganization = X.TreeStore()
        .ID("storeSAOrganization")
        .AutoLoad(false)
        .Model(SA_OrganizationModel)
        .Proxy(p => p
            .Add(X.AjaxProxy()
                .Url(Url.Action("GetChildren", "SAOrganization"))
                .Reader(r => r.Add(X.JsonReader().Root("data")))
            )
        );

    var treePanelSAOrganization = X.TreePanel()
         .ID("treePanelSAOrganization")
         .Region(Region.Center)
         .AutoScroll(true)
         .RootVisible(false)
         .MultiSelect(false)
         .FolderSort(true)
         .Store(storeSAOrganization)
         .ColumnModel(
             X.TreeColumn().DataIndex("name").Text("组织架构").Width(180),
             X.Column().DataIndex("description").Text("描述").Width(180),
             X.Column().DataIndex("orgTypeDescription").Text("类型"),
             X.Column().DataIndex("phone").Text("电话"),
             X.Column().DataIndex("fax").Text("传真"),
             X.Column().DataIndex("zip").Text("邮编"),
             X.Column().DataIndex("address").Text("地址"),
             X.Column().DataIndex("areaPath").Text("所在区域").Flex(1)
         )
         .Root(X.Node().NodeID("").Text("苏州天元").AttributesObject(new { description ="组织架构"}))
         .Listeners(l =>
         {
             l.AfterRender.Handler = "this.expandAll();";
         })

         .TopBar(t => t
             .Add(X
                 .Toolbar()
                 .ID("toolbarXinZhengQuYu")
                 .Items(ti =>
                 {
                     ti.Add(X.Button()
                         .ID("btnAdd")
                         .Disabled(@Model.DisableAdd)
                         .Text("新增")
                         .Icon(Icon.ApplicationAdd)
                         .Menu(
                             X.Menu()
                                 .Listeners(l => l.BeforeShow.Fn = "checkMenuStatus")
                                 .ItemID("createMenu")
                                 .Items(
                                     m =>
                                     {
                                         m.Add(
                                             X.MenuItem()
                                                 .ID("menuCompany")
                                                 .Text("公司")
                                                 .DirectEvents(
                                                     de =>
                                                     {
                                                         de.Click.Url = Url.Action("CreateCompany", "SAOrganization");
                                                         de.Click.EventMask.ShowMask = true;
                                                         de.Click.ExtraParams.Add(X.Parameter().Name("currentNode").Value("getSelectedNode(App.treePanelSAOrganization).getData()").Mode(ParameterMode.Raw));
                                                     }));
                                         m.Add(
                                             X.MenuItem()
                                                 .ID("menuDepartment")
                                                 .Text("部门")
                                                 .DirectEvents(
                                                     de =>
                                                     {
                                                         de.Click.Url = Url.Action("CreateDepartment", "SAOrganization");
                                                         de.Click.EventMask.ShowMask = true;
                                                         de.Click.ExtraParams.Add(X.Parameter().Name("currentNode").Value("getSelectedNode(App.treePanelSAOrganization).getData()").Mode(ParameterMode.Raw));
                                                     }));
                                         m.Add(
                                             X.MenuItem()
                                                 .ID("menuPosition")
                                                 .Text("岗位")
                                                 .DirectEvents(
                                                     de =>
                                                     {
                                                         de.Click.Url = Url.Action("CreatePosition", "SAOrganization");
                                                         de.Click.EventMask.ShowMask = true;
                                                         de.Click.ExtraParams.Add(X.Parameter().Name("currentNode").Value("getSelectedNode(App.treePanelSAOrganization).getData()").Mode(ParameterMode.Raw));
                                                     }));
                                         m.Add(
                                             X.MenuItem()
                                                 .ID("menuStaff")
                                                 .Text("人员")
                                                 .DirectEvents(
                                                     de =>
                                                     {
                                                         de.Click.Url = Url.Action("CreateStaff", "SAOrganization");
                                                         de.Click.EventMask.ShowMask = true;
                                                         de.Click.ExtraParams.Add(X.Parameter().Name("currentNode").Value("getSelectedNode(App.treePanelSAOrganization).getData()").Mode(ParameterMode.Raw));
                                                     }));
                                     })));
                         //.DirectEvents(
                         //    de =>
                         //    {
                         //        de.Click.Before = "return beforeTreeAddCheck(App.treePanelSAOrganization)";
                         //        de.Click.Url = Url.Action("Create", "SAOrganization");
                         //        de.Click.ExtraParams.Add(new Parameter
                         //        {
                         //            Name = "parentId",
                         //            Value = "getSelectedNodeId(App.treePanelSAOrganization)",
                         //            Mode = ParameterMode.Raw
                         //        });
                         //        de.Click.EventMask.ShowMask = true;
                         //    }))
                         //    ;
                     ti.Add(X.Button()
                         .ID("btnEdit")
                         .Disabled(@Model.DisableEdit)
                         .Text("修改")
                         .Icon(Icon.ApplicationFormEdit)
                         .DirectEvents(
                             de =>
                             {
                                 de.Click.Before = "return beforeTreeEditCheck(App.treePanelSAOrganization);";
                                 de.Click.Url = Url.Action("Edit", "SAOrganization");
                                 de.Click.EventMask.ShowMask = true;
                                 de.Click.ExtraParams.Add(X.Parameter().Name("currentNode").Value("getSelectedNode(App.treePanelSAOrganization).getData()").Mode(ParameterMode.Raw));
                                 //de.Click.ExtraParams.Add(new Parameter()
                                 //{
                                 //    Name = "currentNode",
                                 //    Value = "getSelectedNode(App.treePanelSAOrganization).getData()",
                                 //    Mode = ParameterMode.Raw
                                 //});
                             }));
                     ti.Add(X.Button()
                         .ID("btnDelete")
                         .Disabled(@Model.DisableDelete)
                         .Text("删除")
                         .Icon(Icon.ApplicationDelete)
                         .Listeners(l => l.Click.Handler = "deleteNode(App.treePanelSAOrganization,'SAOrganization','Delete')")
                         );
                     ti.Add(X.Button()
                         .ID("btnRefresh")
                         .Disabled(@Model.DisableRefresh)
                         .Text("刷新")
                         .Icon(Icon.TableRefresh)
                         .DirectEvents(
                             de =>
                             {
                                 de.Click.Url = Url.Action("Refresh", "SAOrganization");
                                 de.Click.EventMask.ShowMask = true;
                             }));
                 })
             ))
         .BottomBar(b => b
             .Add(X.StatusBar().DefaultText("")));    
}
@(
 X.Viewport()
      .ID("content")
      .Layout(LayoutType.Border)
          .Items(treePanelSAOrganization)
      )