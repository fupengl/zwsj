
@using DataAccess
@model DataAccess.UserRegister
@{
    var X = Html.X();
}

@{



    var formPanel = X.FormPanel()
        .ID("FormPanelUserRegister")
        .Frame(true)
        .DefaultAnchor("100%")
        .BodyPadding(6)
        .FieldDefaults(def =>
        {
            def.MsgTarget = MessageTarget.Side;
        })
        .Items(
//            X.FieldContainer()
//                .Layout(LayoutType.HBox)
//                .Margins("0 5 0 5")
//                .Items(i =>
//                {
//                    i.Add(X.TextFieldFor(m => m.WuYeBianHao).ID("WuYeBianHao").FieldLabel("物业编号").AllowBlank(true).MaxLength(20).Hidden(false));
//                    i.Add(X.TextFieldFor(m => m.WuYeMingCheng).ID("WuYeMingCheng").FieldLabel("物业名称").AllowBlank(true).MaxLength(100).Hidden(false).Margins("0 0 0 50"));
//                }),  
            X.HiddenFor(m => m.Id).ID("Id").FieldLabel("Id"),
            X.TextFieldFor(m => m.UserName).ID("UserName").FieldLabel("注册名称").AllowBlank(true).MaxLength(50).Hidden(false).ReadOnly(false),
            X.TextFieldFor(m => m.Phone).ID("Phone").FieldLabel("手机号").AllowBlank(true).MaxLength(50).Hidden(false).ReadOnly(false),
            X.TextFieldFor(m => m.EMail).ID("EMail").FieldLabel("邮箱").AllowBlank(true).MaxLength(200).Hidden(false).ReadOnly(false),
            X.TextFieldFor(m => m.Industry).ID("Industry").FieldLabel("从事行业").AllowBlank(true).MaxLength(200).Hidden(false).ReadOnly(false),
            X.TextFieldFor(m => m.City).ID("City").FieldLabel("所在城市").AllowBlank(true).MaxLength(200).Hidden(false).ReadOnly(false),
            X.DateFieldFor(m => m.ReigisterDate).ID("ReigisterDate").FieldLabel("申请日期").AllowBlank(true).Format("yyyy/MM/dd").Hidden(false).ReadOnly(false)
        )

        .TopBar(X.Toolbar()
            .ID("formToolbarUserRegister")
            .Items(
                X.Button()
                    .ID("btnSave")
                    .Text("保存")
                    .Icon(Icon.TableSave)
                    .DirectEvents(
                        de =>
                        {
                            de.Click.Before = "return formValidation(App.FormPanelUserRegister)";
                            de.Click.Url = Url.Action("Update", "UserRegister");
                            de.Click.EventMask.ShowMask = true;
                            de.Click.FormID = "FormPanelUserRegister";
                        }),
                X.Button()
                    .ID("btnCancel")
                    .Text("取消")
                    .Icon(Icon.Cancel)
                    .Listeners(l => l.Click.Handler = "#{windowUserRegister}.hide()")
            )
        );
}

@(X.Window()
      .ID("windowUserRegister")
      .Width(600)
      .Title("UserRegister")
      .Resizable(false)
      .Icon(Icon.ApplicationForm)
      .CloseAction(CloseAction.Destroy)      
      .Items().Add(formPanel))      
);